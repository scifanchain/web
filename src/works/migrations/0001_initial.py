# Generated by Django 3.2.6 on 2021-08-22 20:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_editorjs_fields.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='故事章节')),
                ('order', models.IntegerField()),
                ('belong_to_story', models.IntegerField(blank=True, default=0, verbose_name='所属故事')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='故事')),
                ('desc', django_editorjs_fields.fields.EditorJsTextField()),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('summary', models.CharField(blank=True, max_length=1024, verbose_name='摘要')),
                ('content', django_editorjs_fields.fields.EditorJsJSONField()),
                ('kind', models.PositiveSmallIntegerField(choices=[(0, '未定义'), (1, '纪元'), (2, '地点'), (3, '人物'), (4, '事件')], default=0, verbose_name='类型')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '正常'), (0, '删除'), (2, '冻结')], default=1, verbose_name='状态')),
                ('belong_to_story', models.IntegerField(blank=True, default=0, verbose_name='所属故事')),
                ('belong_to_chapter', models.IntegerField(blank=True, default=0, verbose_name='所属章节')),
                ('pv', models.PositiveIntegerField(default=1)),
                ('uv', models.PositiveIntegerField(default=1)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '作品',
                'verbose_name_plural': '作品',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalStory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='故事')),
                ('desc', django_editorjs_fields.fields.EditorJsTextField()),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='修改时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': 'historical story',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('summary', models.CharField(blank=True, max_length=1024, verbose_name='摘要')),
                ('content', django_editorjs_fields.fields.EditorJsJSONField()),
                ('kind', models.PositiveSmallIntegerField(choices=[(0, '未定义'), (1, '纪元'), (2, '地点'), (3, '人物'), (4, '事件')], default=0, verbose_name='类型')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '正常'), (0, '删除'), (2, '冻结')], default=1, verbose_name='状态')),
                ('belong_to_story', models.IntegerField(blank=True, default=0, verbose_name='所属故事')),
                ('belong_to_chapter', models.IntegerField(blank=True, default=0, verbose_name='所属章节')),
                ('pv', models.PositiveIntegerField(default=1)),
                ('uv', models.PositiveIntegerField(default=1)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='修改时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': 'historical 作品',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalChapter',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='故事章节')),
                ('order', models.IntegerField()),
                ('belong_to_story', models.IntegerField(blank=True, default=0, verbose_name='所属故事')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical chapter',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
